minGW를 일단 다운로드 (https://sourceforge.net/projects/mingw/)
거기서 디벨로퍼 툴킷 + 베이스 + gcc g++ 를 설치(베이스 2개다 설치)
그리고 환경변수를 C:\MinGW\bin 으로 맞춤. (직접 들어가서 확인해볼것)
cmd에서 gcc -v 로 버전확인

비주얼코드에서 확장 다운로드로 C/C++ 그리고 C/C++ compile run 다운로드
이후 기본 빌드 작업 구성(Ctrl + Shift + B)
하면 tasks.json 나옴
아래 소스 복붙
{
    "version": "2.0.0",
    "runner": "terminal",
    "type": "shell",
    "echoCommand": true,
    "presentation": {
        "reveal": "always"
    },
    "tasks": [
        {
            "label": "save and compile for C++",
            "command": "g++",
            "args": [
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "group": "build",
            "problemMatcher": {
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "save and compile for C",
            "command": "gcc",
            "args": [
                "${file}",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "group": "build",
            "problemMatcher": {
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        },
        {
            "label": "execute",
            "command": "cmd",
            "group": "test",
            "args": [
                "/C",
                "${fileDirname}\\${fileBasenameNoExtension}"
            ]
        },
        {
            "type": "cppbuild",
            "label": "C/C++: gcc.exe 활성 파일 빌드",
            "command": "C:\\MinGW\\bin\\gcc.exe",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
            "detail": "디버거에서 생성된 작업입니다."
        },
        {
            "type": "cppbuild",
            "label": "C/C++: g++.exe 활성 파일 빌드",
            "command": "C:\\MinGW\\bin\\g++.exe",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
//            "group": {
//               "kind": "build",
//                "isDefault": true
//            },
            
            "detail": "디버거에서 생성된 작업입니다."
        },
        {
            "type": "cppbuild",
            "label": "C/C++: gcc.exe 활성 파일 빌드",
            "command": "C:\\MinGW\\bin\\gcc.exe",
            "args": [
                "-g",
                "${file}",
                "-o",
                "${fileDirname}\\${fileBasenameNoExtension}.exe"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": "build",
              
            // "group": {
            //     "kind": "build",
            //     "isDefault": true
            // },

            "detail": "컴파일러: C:\\MinGW\\bin\\gcc.exe"
        }
    ]
}

그리고 파일 > 기본 설정 > 바로가기 키해서
keybingings.json에 아래 소스코드 복붙
[
    // 컴파일
    {
        "key": "ctrl+alt+c",
        "command": "workbench.action.tasks.build"
    },
    // 실행
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.tasks.test"
    }
]

(위는 안해도 될수도??)
어찌됐든 이제 코드 작성 후 F6을 누르면 됨.

한글은 깨짐
해결법 코드 밑창에 UTF-8을 누르고 다시열기하여 kor로 바꾼다.

혹은 검색창에 언어설정 들어가서 > 날짜, 시간 및 사용지역 언어로 들어간다
>국가별 설정 들어가고 > 날짜, 시간 또는 숫자.... 로 들어간다
> 관리자 옵션에서 시스템 로컬 변경 > Beta utf-8 체크 (그런데 이렇게 하면 몇몇 한국게임을 할 수 없다,)

이러면 되고
삭제할때는 MinGW Install 검색하면 인스텔러 매니져뜸 체크박스에 해당된 곳들을 우클릭 리무브하고
메뉴 첫번째 인스텔러클릭 apply changes클릭 이후 또 apply하면 이건 삭제 완료 (설치된 폴더는 이제 그냥 지워도 됨)
환경변수도 지우자

많은 참고 : https://rasino.tistory.com/307
